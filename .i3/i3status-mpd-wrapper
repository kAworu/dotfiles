#!/usr/bin/env lua
-- a simple i3-status wrapper for MPD.

-- this will include this script's directory in the Lua's package path.
function hack_package_path()
    -- dirname function stolen and hacked from http://www.it.freebsd.org/ports/local-distfiles/philip/filename.lua%3Frev=1.2
    local function dirname(path)
        while true do
            if path == "" or
                    string.sub(path, -2) == "/." or
                    string.sub(path, -3) == "/.." or
                    (string.sub(path, -1) == "." and string.len(path) == 1) or
                    (string.sub(path, -2) == ".." and string.len(path) == 2) then
                break
            elseif string.sub(path, -1) == "/" then
                path = string.sub(path, 1, -2)
                break;
            end
            path = string.sub(path, 1, -2)
        end
        if path == "" then
            path = "."
        end

        return path
    end
    local directory = dirname(arg[0])
    package.path  = package.path  ..  ";" .. directory .. "/?.lua"
    package.cpath = package.cpath ..  ";" .. directory .. "/?.so"
end

hack_package_path()
require("lua-mpd.mpd")
json = require("dkjson")

mpc = mpd.new {
    hostname = (arg[1] or "localhost"),
    port     = (arg[2] or 6600)
}

-- Skip the first line which contains the version header.
print(io.read())
io.flush()
-- The second line contains the start of the infinite array.
print(io.read())
io.flush()

-- Let's Go.
while true do
    local function mpc_line()
        local function unknowize(text)
            return (text or "(unknown)")
        end

        local now_playing, status, total_time, current_time, radio

        status = mpc:send("status")
        if status.errormsg then
            return status.errormsg
        elseif status.state == "stop" then
            return "stopped."
        end

        local zstats = mpc:send("playlistid " .. tonumber(status.songid))
        if zstats.name then -- radio
            radio = true
            now_playing = string.format("%s / %s", zstats.title, zstats.name)
        else
            local function timeformat(t)
                if tonumber(t) >= 60 * 60 then -- more than one hour!
                    return os.date("%X", t)
                else
                    return os.date("%M:%S", t)
                end
            end
            radio = false
            now_playing = string.format("%s - %s - %s",
                unknowize(zstats.artist),
                unknowize(zstats.album),
                unknowize(zstats.title)
            )
            current_time   = timeformat(status.time:match("(%d+):"))
            total_time     = timeformat(status.time:match("%d+:(%d+)"))
        end

        if status.state ~= "play" then
            now_playing = string.format("%s (%s)", now_playing, status.state)
        end

        if not radio then
            now_playing = string.format("%s / %s of %s", now_playing, current_time, total_time)
        end
        now_playing = string.format("%s / volume(%s%%)", now_playing, status.volume)

        return now_playing
    end

    local line = io.read()
    -- trim leading coma if any.
    if line:sub(0, 1) == "," then
        line = line:sub(2)
    end

    local t = json.decode(line)
    table.insert(t, 1, {
        name = "MPD",
        full_text = mpc_line(),
        color = "#37d4ca"
    })
    print(json.encode(t) .. ",")
    io.flush()
end
